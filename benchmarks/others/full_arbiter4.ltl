#no spurious grants on start
!((r0=0 * g0=0) U (r0=0 * g0=1));
!((r1=0 * g1=0) U (r1=0 * g1=1));
!((r2=0 * g2=0) U (r2=0 * g2=1));
!((r3=0 * g3=0) U (r3=0 * g3=1));

#no spurious grants
!F(g0=1 * X(r0=0 * g0=0) * X((r0=0 * g0=0) U (g0=1 * r0=0) ));
!F(g1=1 * X(r1=0 * g1=0) * X((r1=0 * g1=0) U (g1=1 * r1=0) ));
!F(g2=1 * X(r2=0 * g2=0) * X((r2=0 * g2=0) U (g2=1 * r2=0) ));
!F(g3=1 * X(r3=0 * g3=0) * X((r3=0 * g3=0) U (g3=1 * r3=0) ));

#every grant is lowered unless request keeps staying high
G( (r0=0 * g0=1) -> F((r0=1 * g0=1) + (g0=0)) );
G( (r1=0 * g1=1) -> F((r1=1 * g1=1) + (g1=0)) );
G( (r2=0 * g2=1) -> F((r2=1 * g2=1) + (g2=0)) );
G( (r3=0 * g3=1) -> F((r3=1 * g3=1) + (g3=0)) );

#every request is granted
G( (r0=1) -> F(g0=1) );
G( (r1=1) -> F(g1=1) );
G( (r2=1) -> F(g2=1) );
G( (r3=1) -> F(g3=1) );

#mutual exclusion
G(!(g0=1 * g1=1));
G(!(g0=1 * g2=1));
G(!(g0=1 * g3=1));
G(!(g1=1 * g2=1));
G(!(g1=1 * g3=1));
G(!(g2=1 * g3=1));
