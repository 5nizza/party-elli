# Mealy/Moore realizable

#no spurious grants on start
!((r0=0 * g0=0) U (r0=0 * g0=1));
!((r1=0 * g1=0) U (r1=0 * g1=1));

#no spurious grants
!F(g0=1 * X(r0=0 * g0=0) * X((r0=0 * g0=0) U (g0=1 * r0=0) ));
!F(g1=1 * X(r1=0 * g1=0) * X((r1=0 * g1=0) U (g1=1 * r1=0) ));

#every grant is lowered unless request keeps staying high
G( (r0=0 * g0=1) -> F((r0=1 * g0=1) + (g0=0)) );
G( (r1=0 * g1=1) -> F((r1=1 * g1=1) + (g1=0)) );

#requests cancelled should not be granted
!F( c0=1 * X(r0=0 U g0=1 ) );
!F( c1=1 * X(r1=0 U g1=1 ) );

#every request is granted
G( r0=1 -> F(g0=1 + c0=1) );
G( r1=1 -> F(g1=1 + c1=1) );

#mutual exclusion
G(!(g0=1 * g1=1));
