  ###############
  [spec_unit u1]
  ###############
  assume (G (FALSE  + (!(TRUE  * (X(hmastlock=1)) * (TRUE  * (!(hburst0=1)) * (hburst1=1)) * (TRUE  * (!(X(hmaster0=1)))))) + (X (F (!(hbusreq0=1))))));
  assume (G (FALSE  + (!(TRUE  * (X(hmastlock=1)) * (TRUE  * (!(hburst0=1)) * (hburst1=1)) * (TRUE  * (X(hmaster0=1))))) + (X (F (!(hbusreq1=1))))));
  assume (G (F (hready=1))) * (G (FALSE  + (!(hlock0=1)) + (hbusreq0=1))) * (G (FALSE  + (!(hlock1=1)) + (hbusreq1=1)));
  assume (!(hbusreq0=1)) * (!(hlock0=1)) * (!(hbusreq1=1)) * (!(hlock1=1)) * (!(hready=1));
  
  (G (FALSE  + (hready=1) + (X (!(X(start=1))))));
  (G (FALSE  + (!(TRUE  * (X(hmastlock=1)) * (TRUE  * (!(hburst0=1)) * (hburst1=1)) * (X(start=1)) * (TRUE  * (!(X(hmaster0=1)))))) + (X ((!(X(start=1))) W (!(hbusreq0=1))))));
  (G (FALSE  + (!(TRUE  * (X(hmastlock=1)) * (TRUE  * (!(hburst0=1)) * (hburst1=1)) * (X(start=1)) * (TRUE  * (X(hmaster0=1))))) + (X ((!(X(start=1))) W (!(hbusreq1=1))))));
  (G (FALSE  + (!(TRUE  * (X(hmastlock=1)) * (TRUE  * (hburst0=1) * (hburst1=1)) * (X(start=1)))) + (TRUE  * (hready=1) * (X ((!(X(start=1))) W (TRUE  * (hready=1) * (X ((!(X(start=1))) W (TRUE  * (hready=1) * (X ((!(X(start=1))) W (TRUE  * (hready=1))))))))))) + (TRUE  * (!(hready=1)) * (X ((!(X(start=1))) W (TRUE  * (hready=1) * (X ((!(X(start=1))) W (TRUE  * (hready=1) * (X ((!(X(start=1))) W (TRUE  * (hready=1) * (X ((!(X(start=1))) W (TRUE  * (hready=1))))))))))))))));
  
  ###############
  [spec_unit u2]
  ###############
  assume (G (FALSE  + (!(TRUE  * (X(hmastlock=1)) * (TRUE  * (!(hburst0=1)) * (hburst1=1)) * (TRUE  * (!(X(hmaster0=1)))))) + (X (F (!(hbusreq0=1))))));
  assume (G (FALSE  + (!(TRUE  * (X(hmastlock=1)) * (TRUE  * (!(hburst0=1)) * (hburst1=1)) * (TRUE  * (X(hmaster0=1))))) + (X (F (!(hbusreq1=1))))));
  assume (G (F (hready=1))) * (G (FALSE  + (!(hlock0=1)) + (hbusreq0=1))) * (G (FALSE  + (!(hlock1=1)) + (hbusreq1=1)));
  assume (!(hbusreq0=1)) * (!(hlock0=1)) * (!(hbusreq1=1)) * (!(hlock1=1)) * (!(hready=1));
  
  (G (FALSE  + (!(TRUE  * (X(hmastlock=1)) * (TRUE  * (hburst0=1) * (hburst1=1)) * (X(start=1)))) + (TRUE  * (hready=1) * (X ((!(X(start=1))) W (TRUE  * (hready=1) * (X ((!(X(start=1))) W (TRUE  * (hready=1) * (X ((!(X(start=1))) W (TRUE  * (hready=1))))))))))) + (TRUE  * (!(hready=1)) * (X ((!(X(start=1))) W (TRUE  * (hready=1) * (X ((!(X(start=1))) W (TRUE  * (hready=1) * (X ((!(X(start=1))) W (TRUE  * (hready=1) * (X ((!(X(start=1))) W (TRUE  * (hready=1))))))))))))))));
  (G (FALSE  + (!(hready=1)) + ((X(hgrant0=1)) <-> (X (TRUE  * (!(X(hmaster0=1))))))));
  (G (FALSE  + (!(hready=1)) + ((X(hgrant1=1)) <-> (X (TRUE  * (X(hmaster0=1)))))));
  (G (FALSE  + (!(hready=1)) + ((X(locked=1)) <-> (X (X(hmastlock=1))))));
  (G (FALSE  + (!(X (!(X(start=1))))) + ((TRUE  * (!(X(hmaster0=1)))) <-> (X (TRUE  * (!(X(hmaster0=1))))))));
  (G (FALSE  + (!(X (!(X(start=1))))) + ((TRUE  * (X(hmaster0=1))) <-> (X (TRUE  * (X(hmaster0=1)))))));
  (G (FALSE  + (!(X (!(X(start=1))))) + ((X(hmastlock=1)) <-> (X (X(hmastlock=1))))));
  
  ###############
  [spec_unit u3]
  ###############
  assume (G (FALSE  + (!(TRUE  * (X(hmastlock=1)) * (TRUE  * (!(hburst0=1)) * (hburst1=1)) * (TRUE  * (!(X(hmaster0=1)))))) + (X (F (!(hbusreq0=1))))));
  assume (G (FALSE  + (!(TRUE  * (X(hmastlock=1)) * (TRUE  * (!(hburst0=1)) * (hburst1=1)) * (TRUE  * (X(hmaster0=1))))) + (X (F (!(hbusreq1=1))))));
  assume (G (F (hready=1))) * (G (FALSE  + (!(hlock0=1)) + (hbusreq0=1))) * (G (FALSE  + (!(hlock1=1)) + (hbusreq1=1)));
  assume (!(hbusreq0=1)) * (!(hlock0=1)) * (!(hbusreq1=1)) * (!(hlock1=1)) * (!(hready=1));
  
  (G (FALSE  + (!(TRUE  * (X(decide=1)) * (X (X(hgrant0=1))))) + ((hlock0=1) <-> (X(locked=1)))));
  (G (FALSE  + (!(TRUE  * (X(decide=1)) * (X (X(hgrant1=1))))) + ((hlock1=1) <-> (X(locked=1)))));
  (G (FALSE  + (!(X(decide=1))) + ((X(hgrant0=1)) <-> (X (X(hgrant0=1))))));
  (G (FALSE  + (!(X(decide=1))) + ((X(hgrant1=1)) <-> (X (X(hgrant1=1))))));
  (G (FALSE  + (!(X(decide=1))) + ((X(locked=1)) <-> (X (X(locked=1))))));
  (G (FALSE  + (!(hbusreq0=1)) + (F (FALSE  + (!(hbusreq0=1)) + (TRUE  * (!(X(hmaster0=1))))))));
  (G (FALSE  + (!(hbusreq1=1)) + (F (FALSE  + (!(hbusreq1=1)) + (TRUE  * (X(hmaster0=1)))))));
  (G (FALSE  + (X(hgrant1=1)) + (G (!(X(hgrant1=1)))) + ((!(X(hgrant1=1))) W (hbusreq1=1))));
  (G (FALSE  + (!(X(decide=1))) + (hbusreq0=1) + (hbusreq1=1) + (X (X(hgrant0=1)))));
  (X(decide=1));
  (X(start=1));
  (X(hgrant0=1));
  (TRUE  * (!(X(hmaster0=1))));
  (!(X(hmastlock=1)));
  (!(X(hgrant1=1)));
  
  group_order = FLAT;
